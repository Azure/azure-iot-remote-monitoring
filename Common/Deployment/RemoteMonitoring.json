{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aadTenant": {
            "type": "string",
            "metadata": {
                "description": "The name of the service Tenant"
            }
        },
        "suiteName": {
            "type": "string",
            "metadata": {
                "description": "The name of the suite"
            }
        },
        "docDBName": {
            "type": "string",
            "metadata": {
                "description": "The name of the documentDB"
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storageAccount"
            }
        },
        "iotHubName": {
            "type": "string",
            "metadata": {
                "description": "The name of the iotHub"
            }
        },
        "sbName": {
            "type": "string",
            "metadata": {
                "description": "The name of the serviceBus"
            }
        },
        "packageUri": {
            "type": "string",
            "defaultValue": "http://aka.ms/azureiot/remotemonitoring/web"
        },
        "webJobPackageUri": {
            "type": "string",
            "defaultValue": "http://aka.ms/azureiot/remotemonitoring/webjob"
        },
        "sasStartBehavior": {
            "type": "string",
            "metadata": {
                "description": "The start behavior for Stream Analytics jobs [LastStopTime | JobStartTime (default)]"
            },
            "defaultValue": "JobStartTime"
        },
        "sasStartTime": {
            "type": "string",
            "metadata": {
                "description": "The start time for Stream Analytics jobs"
            }
        }
    },
    "variables": {
        "storageAccountType": "Standard_GRS",
        "location": "[resourceGroup().location]",
        "storageVersion": "2015-05-01-preview",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
        "sbVersion": "[providers('Microsoft.Eventhub', 'namespaces').apiVersions[0]]",
        "ehOutName": "[concat(parameters('suiteName'), '-ehout')]",
        "ehRuleOutName": "[concat(parameters('suiteName'), '-ehruleout')]",
        "sbKeyName": "RootManageSharedAccessKey",
        "sbResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', parameters('sbName'), variables('sbKeyName'))]",
        "saVersion": "2015-10-01",
        "webVersion": "2015-04-01",
        "bingMapsName": "[concat(parameters('suiteName'), '-map')]",
        "bingMapsVersion": "2015-07-02",
        "webJobPlanName": "[concat(parameters('suiteName'), '-jobsplan')]",
        "webJobSku": "Standard",
        "webJobWorkerSize": "0",
        "webJobWorkerCount": "2",
        "webJobSiteName": "[concat(parameters('suiteName'), '-jobhost')]",
        "webPlanName": "[concat(parameters('suiteName'), '-plan')]",
        "webSiteName": "[parameters('suiteName')]",
        "webSku": "Standard",
        "webWorkerSize": "0",
        "webWorkerCount": "2",
        "AADMetadataAddress": "[concat('https://login.windows.net/' , parameters('AADTenant'), '/FederationMetadata/2007-06/FederationMetadata.xml')]",
        "AADRealm": "[toLower(concat('https://', variables('webSiteName'), '.azurewebsites.net/iotsuite'))]",
        "docDBVersion": "2015-04-08",
        "docDBSku": "Standard",
        "docDBResourceId": "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('docDBName'))]",
        "iotHubVersion": "2015-08-15-preview",
        "iotHubSku": "S2",
        "iotHubTier": "Standard",
        "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
        "iotHubKeyName": "iothubowner",
        "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), variables('iotHubKeyName'))]",
        "rulesCGName": "rulescg",
        "deviceInfoCGName": "deviceinfocg",
        "telemetryCGName": "telemetrycg"
    },
    "resources": [
        {
            "apiVersion": "[variables('docDBVersion')]",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[parameters('docDBName')]",
            "location": "[variables('location')]",
            "properties": {
                "name": "[parameters('docDBName')]",
                "databaseAccountOfferType": "[variables('docDBSku')]"
            }
        },
        {
            "apiVersion": "[variables('bingMapsVersion')]",
            "type": "Microsoft.BingMaps/mapApis",
            "name": "[variables('bingMapsName')]",
            "location": "westus",
            "plan": {
                "publisher": "bingmaps",
                "product": "mapapis",
                "name": "internal1",
                "promotionCode": null
            },
            "properties": { }
            },
        {
            "apiVersion": "[variables('storageVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "type": "Microsoft.Devices/Iothubs",
            "name": "[parameters('iotHubName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('iotHubSku')]",
                "tier": "[variables('iotHubTier')]",
                "capacity": 1
            },
            "properties": {
                "location": "[variables('location')]"
            }
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('rulesCGName'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "dependsOn": [
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('deviceInfoCGName'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "dependsOn": [
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('telemetryCGName'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "dependsOn": [
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('sbVersion')]",
            "name": "[parameters('sbName')]",
            "type": "Microsoft.Eventhub/namespaces",
            "location": "[variables('location')]",
            "properties": {
                "region": "[variables('location')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('ehOutName')]",
                    "type": "eventHubs",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Eventhub/namespaces/', parameters('sbName'))]"
                    ],
                    "properties": {
                        "path": "[variables('ehOutName')]"
                    }
                },
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('ehRuleOutName')]",
                    "type": "eventHubs",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Eventhub/namespaces/', parameters('sbName'))]"
                    ],
                    "properties": {
                        "path": "[variables('ehRuleOutName')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('suiteName'), '-Telemetry')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "OutputStartMode": "[parameters('sasStartBehavior')]",
                "OutputStartTime": "[parameters('sasStartTime')]",
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "IoTHubStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "consumerGroupName": "[variables('telemetryCGName')]",
                                    "iotHubNamespace": "[parameters('iotHubName')]",
                                    "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                                    "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                                },
                                "Type": "Microsoft.Devices/IotHubs"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Telemetry",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "DeviceTelemetry",
                                    "DateFormat": "yyyy/MM/dd",
                                    "TimeFormat": "HH",
                                    "PathPattern": "devicetelemetry/{date}/{time}",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[parameters('storageName')]"
                                        }
                                    ]
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "FieldDelimiter": ","
                                },
                                "Type": "Csv"
                            }
                        }
                    },
                    {
                        "Name": "TelemetrySummary",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "devicetelemetry",
                                    "DateFormat": "yyyy/MM/dd",
                                    "TimeFormat": "HH",
                                    "PathPattern": "devicetelemetry-summary/{date}/{time}",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[parameters('storageName')]"
                                        }
                                    ]
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "FieldDelimiter": ","
                                },
                                "Type": "Csv"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "AllToBlob",
                    "Properties": {
                        "Query": "WITH \r\n    [StreamData]\r\nAS (\r\n    SELECT\r\n        *\r\n    FROM \r\n      [IoTHubStream] \r\n    WHERE\r\n        [ObjectType] IS NULL -- Filter out device info and command responses\r\n) \r\n\r\nSELECT\r\n    *\r\nINTO\r\n    [Telemetry]\r\nFROM\r\n    [StreamData]\r\n\r\nSELECT\r\n    DeviceId,\r\n    AVG (Humidity) AS [AverageHumidity], \r\n    MIN(Humidity) AS [MinimumHumidity], \r\n    MAX(Humidity) AS [MaxHumidity], \r\n    5.0 AS TimeframeMinutes \r\nINTO\r\n    [TelemetrySummary]\r\nFROM\r\n    [StreamData]\r\nWHERE\r\n    [Humidity] IS NOT NULL\r\nGROUP BY\r\n    DeviceId, \r\n    SlidingWindow (mi, 5)",
                        "StreamingUnits": 1
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('suiteName'), '-DeviceInfo')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Eventhub/namespaces/', parameters('sbName'))]",
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "OutputStartMode": "[parameters('sasStartBehavior')]",
                "OutputStartTime": "[parameters('sasStartTime')]",
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "DeviceDataStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "consumerGroupName": "[variables('deviceInfoCGName')]",
                                    "iotHubNamespace": "[parameters('iotHubName')]",
                                    "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                                    "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                                },
                                "Type": "Microsoft.Devices/IotHubs"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "DeviceInfoEvents",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "EventHubName": "[variables('ehOutName')]",
                                    "ServiceBusNamespace": "[parameters('sbName')]",
                                    "SharedAccessPolicyKey": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryKey]",
                                    "SharedAccessPolicyName": "[variables('sbKeyName')]",
                                    "PartitionKey": "PartitionId"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "DeviceInfoFilter",
                    "Properties": {
                        "Query": "SELECT * FROM DeviceDataStream Partition By PartitionId WHERE  ObjectType = 'DeviceInfo'",
                        "StreamingUnits": 1
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('suiteName'), '-Rules')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
                "[concat('Microsoft.Eventhub/namespaces/', parameters('sbName'))]",
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "OutputStartMode": "[parameters('sasStartBehavior')]",
                "OutputStartTime": "[parameters('sasStartTime')]",
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "DeviceRulesBlob",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "devicerules",
                                    "DateFormat": "yyyy-MM-dd",
                                    "PathPattern": "{date}/{time}/devicerules.json",
                                    "BlobName": "{date}/{time}/devicerules.json",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[parameters('storageName')]"
                                        }
                                    ],
                                    "TimeFormat": "HH-mm"
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Reference"
                        }
                    },
                    {
                        "Name": "IotTelemetryStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "consumerGroupName": "[variables('rulesCGName')]",
                                    "iotHubNamespace": "[parameters('iotHubName')]",
                                    "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                                    "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                                },
                                "Type": "Microsoft.Devices/IotHubs"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "DeviceRulesHub",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "EventHubName": "[variables('ehRuleOutName')]",
                                    "ServiceBusNamespace": "[parameters('sbName')]",
                                    "SharedAccessPolicyKey": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryKey]",
                                    "SharedAccessPolicyName": "[variables('sbKeyName')]",
                                    "PartitionKey": "PartitionId"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    },
                    {
                        "Name": "DeviceRulesMonitoring",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "Container": "rulesoutput",
                                    "DateFormat": "yyyy/MM/dd",
                                    "TimeFormat": "HH",
                                    "PathPattern": "{date}/{time}",
                                    "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                                            "AccountName": "[parameters('storageName')]"
                                        }
                                    ]
                                },
                                "Type": "Microsoft.Storage/Blob"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "FieldDelimiter": ","
                                },
                                "Type": "Csv"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "DeviceRules",
                    "Properties": {
                        "Query": "WITH AlarmsData AS \r\n(\r\nSELECT\r\n     Stream.DeviceID,\r\n     'Temperature' as ReadingType,\r\n     Stream.Temperature as Reading,\r\n     Ref.Temperature as Threshold,\r\n     Ref.TemperatureRuleOutput as RuleOutput,\r\n     Stream.EventEnqueuedUtcTime AS [Time]\r\nFROM IoTTelemetryStream Stream\r\nJOIN DeviceRulesBlob Ref ON Stream.DeviceID = Ref.DeviceID\r\nWHERE\r\n     Ref.Temperature IS NOT null AND Stream.Temperature > Ref.Temperature\r\n\r\nUNION ALL\r\n\r\nSELECT\r\n     Stream.DeviceID,\r\n     'Humidity' as ReadingType,\r\n     Stream.Humidity as Reading,\r\n     Ref.Humidity as Threshold,\r\n     Ref.HumidityRuleOutput as RuleOutput,\r\n     Stream.EventEnqueuedUtcTime AS [Time]\r\nFROM IoTTelemetryStream Stream\r\nJOIN DeviceRulesBlob Ref ON Stream.DeviceID = Ref.DeviceID\r\nWHERE\r\n     Ref.Humidity IS NOT null AND Stream.Humidity > Ref.Humidity\r\n)\r\n\r\nSELECT *\r\nINTO DeviceRulesMonitoring\r\nFROM AlarmsData\r\n\r\nSELECT *\r\nINTO DeviceRulesHub\r\nFROM AlarmsData",
                        "StreamingUnits": 1
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('location')]",
            "properties": {
                "name": "[variables('webPlanName')]",
                "sku": "[variables('webSku')]",
                "workerSize": "[variables('webWorkerSize')]",
                "numberOfWorkers": "[variables('webWorkerCount')]"
            }
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webJobPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('location')]",
            "properties": {
                "name": "[variables('webJobPlanName')]",
                "sku": "[variables('webJobSku')]",
                "workerSize": "[variables('webJobWorkerSize')]",
                "numberOfWorkers": "[variables('webJobWorkerCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]"
            ]
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('docDBName'))]",
                "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
                "[resourceId('Microsoft.BingMaps/mapApis', variables('bingMapsName'))]"
            ],
            "properties": {
                "serverFarmId": "[variables('webPlanName')]",
                "siteConfig": {
                    "AlwaysOn": true,
                    "appSettings": [
                        {
                            "name": "ida.AADTenant",
                            "value": "[parameters('AADTenant')]"
                        },
                        {
                            "name": "ida.AADAudience",
                            "value": "[variables('AADRealm')]"
                        },
                        {
                            "name": "ida.FederationMetadataAddress",
                            "value": "[variables('AADMetadataAddress')]"
                        },
                        {
                            "name": "ida.FederationRealm",
                            "value": "[variables('AADRealm')]"
                        },
                        {
                            "name": "docdb.EndpointUrl",
                            "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
                        },
                        {
                            "name": "docdb.PrimaryAuthorizationKey",
                            "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
                        },
                        {
                            "name": "iotHub.HostName",
                            "value": "[reference(variables('iotHubResourceId')).hostName]"
                        },
                        {
                            "name": "iotHub.ConnectionString",
                            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
                        },
                        {
                            "name": "device.StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
                        },
                        {
                            "name": "device.TableName",
                            "value": "DeviceList"
                        },
                        {
                            "name": "eventHub.HubName",
                            "value": "[variables('ehOutName')]"
                        },
                        {
                            "name": "eventHub.ConnectionString",
                            "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
                        },
                        {
                            "name": "eventHub.StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
                        },
                        {
                            "name": "RulesEventHub.Name",
                            "value": "[variables('ehRuleOutName')]"
                        },
                        {
                            "name": "RulesEventHub.ConnectionString",
                            "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
                        },
                        {
                            "name": "ObjectTypePrefix",
                            "value": ""
                        },
                        {
                            "name": "MapApiQueryKey",
                            "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
                        },
                        {
                            "name": "SolutionName",
                            "value": "[variables('webSiteName')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "MSDeploy",
                    "type": "extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "[parameters('packageUri')]",
                        "connectionString": "",
                        "dbType": ""
                    }
                        }
                    ]
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webJobSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webJobPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('docDBName'))]",
                "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
                "[resourceId('Microsoft.BingMaps/mapApis', variables('bingMapsName'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-Telemetry'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-DeviceInfo'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-Rules'))]"
            ],
            "properties": {
                "serverFarmId": "[variables('webJobPlanName')]",
                "siteConfig": {
                    "AlwaysOn": true,
                    "appSettings": [
                        {
                            "name": "ida.AADTenant",
                            "value": "[parameters('AADTenant')]"
                        },
                        {
                            "name": "ida.AADAudience",
                            "value": "[variables('AADRealm')]"
                        },
                        {
                            "name": "ida.FederationMetadataAddress",
                            "value": "[variables('AADMetadataAddress')]"
                        },
                        {
                            "name": "ida.FederationRealm",
                            "value": "[variables('AADRealm')]"
                        },
                        {
                            "name": "docdb.EndpointUrl",
                            "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
                        },
                        {
                            "name": "docdb.PrimaryAuthorizationKey",
                            "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
                        },
                        {
                            "name": "iotHub.HostName",
                            "value": "[reference(variables('iotHubResourceId')).hostName]"
                        },
                        {
                            "name": "iotHub.ConnectionString",
                            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
                        },
                        {
                            "name": "device.StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
                        },
                        {
                            "name": "device.TableName",
                            "value": "DeviceList"
                        },
                        {
                            "name": "eventHub.HubName",
                            "value": "[variables('ehOutName')]"
                        },
                        {
                            "name": "eventHub.ConnectionString",
                            "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
                        },
                        {
                            "name": "eventHub.StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
                        },
                        {
                            "name": "RulesEventHub.Name",
                            "value": "[variables('ehRuleOutName')]"
                        },
                        {
                            "name": "RulesEventHub.ConnectionString",
                            "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
                        },
                        {
                            "name": "ObjectTypePrefix",
                            "value": ""
                        },
                        {
                            "name": "MapApiQueryKey",
                            "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
                        },
                        {
                            "name": "SolutionName",
                            "value": "[variables('webSiteName')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "MSDeploy",
                    "type": "extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webJobSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "[parameters('webJobPackageUri')]",
                        "connectionString": "",
                        "dbType": ""
                    }
                }
            ]
        }
    ],
    "outputs": {
        "iotHubHostName": {
            "type": "string",
            "value": "[reference(variables('iotHubResourceId')).hostName]"
        },
        "iotHubConnectionString": {
            "type": "string",
            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
        },
        "docDbURI": {
            "type": "string",
            "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
        },
        "docDbKey": {
            "type": "string",
            "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
        },
        "bingMapsQueryKey": {
            "type": "string",
            "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
        },
        "storageConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
        },
        "ehOutName": {
            "type": "string",
            "value": "[variables('ehOutName')]"
        },
        "ehRuleName": {
            "type": "string",
            "value": "[variables('ehRuleOutName')]"
        },
        "ehConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
        }
    }
}
